% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ospProbDesign.R
\name{osp.tvr}
\alias{osp.tvr}
\title{Tsitsiklis van Roy algorithm with a variety of regression methods}
\usage{
osp.tvr(N, model, subset = 1:N, method = "lm")
}
\arguments{
\item{N}{is the number of paths}

\item{model}{defines the simulator and reward model, with the two main model hooks being 
\code{payoff.func} (plus parameters) and \code{sim.func} (plus parameters)}

\item{subset}{To have out-of-sample paths, specify \code{subset} (eg 1:1000) to use for testing.
By default everything is in-sample.}

\item{method}{a string specifying regression method to use
\itemize{
 \item spline: \code{smooth.spline} from \pkg{base} which only works \emph{in 1D}
 \item randomforest: (from \pkg{randomForest} package) requires \code{rf.maxnode}
 and \code{rf.ntree} (number of trees) model parameters
 \item loess: only works in \emph{1D or 2D}, requires \code{lo.span} model parameter
 \item earth: multivariate regression splines (MARS) using \pkg{earth} package.
 requires \code{earth.deg} (interaction degree), \code{earth.nk} (max number of terms to keep),
 \code{earth.thresh} params
 \item rvm: relevance vector machine from \pkg{kernlab} package. Optional \code{rvm.kernel}
 model parameter to decide which kernel family to utilize. Default kernel is rbfdot
 \item deepnet: neural network using \pkg{deepnet}. Specify \code{nn.layers} as a vector 
 to describe the number of nodes across hidden layers
 \item lm [Default]: linear global regression using \code{model$bases} (required) basis functions (+ constant)
 }}

\item{x0}{-- required part of the model. Can be either a vector of length \code{model$dim} 
or a vector of length \code{model$dim}*N}
}
\value{
a list containing
\itemize{
\item \code{fit} a list containing all the models generated at each time-step. \code{fit[[1]]} is the emulator
at \eqn{t=\Delta t}, the last one is \code{fit[[M-1]]} which is emulator for \eqn{T-\Delta t}.
\item \code{val}: the in-sample pathwise rewards
\item \code{test}: the out-of-sample pathwise rewards
\item \code{p}: the final price (2-vector for in/out-of-sample)
\item \code{timeElapsed} (based on \code{Sys.time})
}
}
\description{
RMC using TvR along a fixed set of paths.
All designs are kept in memory
}
\details{
Works with a probabilistic design that requires storing all paths in memory. Specifying \code{subset}
 allows to compute in parallel with the original computation an out-of-sample estimate of the value function
 
 Calls \code{model$payoff.func}, so the latter must be set prior to calling.
 Also needs \code{model$dt} and \code{model$r} for discounting
 
 Calls \code{model$sim.func} to generate forward paths
 
 Emulator is trained on all paths, even those that are out-of-the-money
}
\examples{
set.seed(1)
model2d <- list(K=40,x0=rep(40,2),sigma=rep(0.2,2),r=0.06,div=0,
 T=1,dt=0.04,dim=2, sim.func=sim.gbm, payoff.func=put.payoff,pilot.nsims=1000,
 earth.deg=2,earth.nk=200,earth.thresh=1E-8)
tvrSolve <- osp.tvr(N=41000,model2d, subset=1:1000,method="earth")
# "in-sample v_0 1.224009; and out-of-sample: 1.233986"
}
